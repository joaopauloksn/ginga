---

- name: Create PVC for model storage
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: model-pvc
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 500Mi
        storageClassName: ocs-storagecluster-cephfs
        volumeMode: Filesystem


- name: Deploying data-monitoring
  kubernetes.core.k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-data-monitoring'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        replicas: "{{size}}"
        selector:
          matchLabels:
            app: msdda-data-monitoring
        template:
          metadata:
            labels:
              app: msdda-data-monitoring
          spec:
            containers:
            - name: msdda-data-monitoring
              image: "jpksn/msdda-data-monitoring:0.0.1"
              imagePullPolicy: Always

- name: Deploying autoscaler-agent
  kubernetes.core.k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-autoscaler-agent'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        replicas: "{{size}}"
        selector:
          matchLabels:
            app: msdda-autoscaler-agent
        template:
          metadata:
            labels:
              app: msdda-autoscaler-agent
          spec:
            containers:
            - name: msdda-autoscaler-agent
              image: "jpksn/msdda-autoscaler-agent:0.0.1"
              imagePullPolicy: Always

- name: Deploying model-development
  kubernetes.core.k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-model-development'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        replicas: "{{size}}"
        selector:
          matchLabels:
            app: msdda-model-development
        template:
          metadata:
            labels:
              app: msdda-model-development
          spec:
            containers:
            - name: msdda-model-development
              image: "jpksn/msdda-model-development:0.0.1"
              imagePullPolicy: Always
              env:
                - name: MONGO_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: mongo-credentials
                      key: username
                - name: MONGO_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mongo-credentials
                      key: password
                - name: MONGO_HOST
                  value: "mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local"
                - name: MONGO_PORT
                  value: "27017"
                - name: MONGO_REPLICA_SET
                  value: "rs0"
                - name: MODEL_PATH
                  value: "/mnt/model/best_replica_predictor_model.h5"
              volumeMounts:
                - name: model-pv
                  mountPath: /mnt/model
            volumes:
              - name: model-pv
                persistentVolumeClaim:
                  claimName: model-pvc

- name: Deploying model-deployment
  kubernetes.core.k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-model-deployment'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        replicas: "{{size}}"
        selector:
          matchLabels:
            app: msdda-model-deployment
        template:
          metadata:
            labels:
              app: msdda-model-deployment
          spec:
            containers:
            - name: msdda-model-deployment
              image: "jpksn/msdda-model-deployment:0.0.1"
              imagePullPolicy: Always
              env:
                - name: MONGO_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: mongo-credentials
                      key: username
                - name: MONGO_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mongo-credentials
                      key: password
                - name: MONGO_HOST
                  value: "mas-mongo-ce-0.mas-mongo-ce-svc.mongoce.svc.cluster.local"
                - name: MONGO_PORT
                  value: "27017"
                - name: MONGO_REPLICA_SET
                  value: "rs0"
                - name: MODEL_PATH
                  value: "/mnt/model/best_replica_predictor_model.h5"
              volumeMounts:
                - name: model-pv
                  mountPath: /mnt/model
            volumes:
              - name: model-pv
                persistentVolumeClaim:
                  claimName: model-pvc

- name: Deploying quality-assurance
  kubernetes.core.k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: '{{ ansible_operator_meta.name }}-quality-assurance'
        namespace: '{{ ansible_operator_meta.namespace }}'
      spec:
        replicas: "{{size}}"
        selector:
          matchLabels:
            app: msdda-quality-assurance
        template:
          metadata:
            labels:
              app: msdda-quality-assurance
          spec:
            containers:
            - name: msdda-quality-assurance
              image: "jpksn/msdda-quality-assurance:0.0.1"
              imagePullPolicy: Always
